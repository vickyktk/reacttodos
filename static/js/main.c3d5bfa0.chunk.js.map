{"version":3,"sources":["components/Todo.js","App.js","index.js"],"names":["Notices","props","notices","className","length","onClick","onUpdateNotices","map","val","ind","type","message","icon","faRemove","id","filteredNotices","filter","removeNotice","localStorage","getItem","setItem","JSON","stringify","Todo","localTodos","useState","parse","todos","setTodos","gTodos","setgTodos","useEffect","inputText","setInputText","setNotices","completedChecked","e","parseInt","target","getAttribute","filteredTodos","completed","value","onKeyPress","which","obj","title","onChange","placeholder","faPlus","gtTodos","filterTheTodos","checked","faTrash","deleteTodo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3d5bfa0.chunk.js","sourcesContent":["import { useState , useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPlus, faRemove } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./todo.css\";\r\n\r\nfunction Notices(props) {\r\n  let notices = props.notices;\r\n  function removeNotice(id) {\r\n    let filteredNotices = notices.filter((val, ind) => {\r\n      return ind !== id;\r\n    });\r\n\r\n    props.onUpdateNotices(filteredNotices);\r\n  }\r\n  let clearNotices = () => {\r\n    props.onUpdateNotices([]);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"extech_notices\">\r\n        {notices.length > 2 && (\r\n          <div>\r\n            <button onClick={clearNotices} className=\"clearNotices\">\r\n              Clear All\r\n            </button>\r\n          </div>\r\n        )}\r\n        {notices.map((val, ind) => {\r\n          return (\r\n            <div className={`extech_notice_${val.type}`} key={ind}>\r\n              <p>{val.message}</p>\r\n              <span>\r\n                <FontAwesomeIcon\r\n                  icon={faRemove}\r\n                  onClick={() => removeNotice(ind)}\r\n                />\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nif (!localStorage.getItem(\"localTodos\"))\r\n  localStorage.setItem(\"localTodos\", JSON.stringify([]));\r\n\r\n\r\nfunction Todo(props) {\r\n  let localTodos = localStorage.getItem(\"localTodos\");\r\n  let [todos, setTodos] = useState(JSON.parse(localTodos));\r\n  let [gTodos, setgTodos] = useState(JSON.parse(localTodos));\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem(\"localTodos\", JSON.stringify(todos));\r\n  }, [todos])\r\n\r\n  let [inputText, setInputText] = useState(\"\");\r\n  const [notices, setNotices] = useState([]);\r\n\r\n  let trackInputKeyPress = (e) => {\r\n    if (13 === e.which) {\r\n      if (\"\" === inputText) {\r\n        let obj = {\r\n          message: \"Please enter some text\",\r\n          type: \"error\"\r\n        };\r\n        setNotices([...notices, obj]);\r\n        return;\r\n      }\r\n\r\n      let obj = { title: inputText, completed: false };\r\n      setTodos([...todos, obj]);\r\n      setgTodos([...todos, obj]);\r\n\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  let addTodo = () => {\r\n    if (\"\" === inputText) {\r\n      let obj = {\r\n        message: \"Please enter some text\",\r\n        type: \"error\"\r\n      };\r\n      setNotices([...notices, obj]);\r\n      return;\r\n    }\r\n\r\n    let obj = { title: inputText, completed: false };\r\n    setTodos([...todos, obj]);\r\n    setgTodos([...todos, obj]);\r\n\r\n    setInputText(\"\");\r\n  };\r\n  let setInputTextVal = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  let completedChecked = (e) => {\r\n    let id = parseInt(e.target.getAttribute(\"data-id\"), 10);\r\n    let filteredTodos = todos.filter((val, ind) => {\r\n      if (id === ind) {\r\n        val.completed = !val.completed;\r\n      }\r\n      return val;\r\n    });\r\n    setTodos(filteredTodos);\r\n    setgTodos(filteredTodos);\r\n  };\r\n  let deleteTodo = (id) => {\r\n    let filteredTodos = todos.filter((val, ind) => {\r\n      return id !== ind;\r\n    });\r\n\r\n    let obj = {\r\n      message: \"Your Todo has been deleted successfully\",\r\n      type: \"success\"\r\n    };\r\n    setNotices([...notices, obj]);\r\n    setTodos(filteredTodos);\r\n    setgTodos(filteredTodos);\r\n  };\r\n\r\n  let filterTheTodos = (val) => {\r\n    if (\"all\" === val) {\r\n      setgTodos(todos);\r\n    }\r\n    if (\"completed\" === val) {\r\n      let gtTodos = todos.filter((val) => val.completed === true);\r\n      setgTodos(gtTodos);\r\n    }\r\n    if (\"active\" === val) {\r\n      let gtTodos = todos.filter((val) => val.completed !== true);\r\n      setgTodos(gtTodos);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"extech_todo_container\">\r\n        <Notices notices={notices} onUpdateNotices={setNotices} />\r\n        <div className=\"extech_todo_top_actions\">\r\n          <input\r\n            value={inputText}\r\n            onKeyPress={trackInputKeyPress}\r\n            onChange={setInputTextVal}\r\n            placeholder={\"What's your plan for today?\"}\r\n          />\r\n          <button onClick={addTodo} className=\"button\">\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </button>\r\n          <select onChange={(e) => filterTheTodos(e.target.value)}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"active\">Active Tasks</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"extech_todo_list\">\r\n          {gTodos.length === 0 && \"No todos found\"}\r\n          {gTodos.length > 0 &&\r\n            gTodos.map((val, ind) => {\r\n              return (\r\n                <div key={ind} className=\"singleTodo\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={completedChecked}\r\n                    checked={val.completed}\r\n                    data-id={ind}\r\n                    className=\"checkbox\"\r\n                  />\r\n\r\n                  <span\r\n                    className={`todoTitle ${val.completed ? \"selected\" : \"\"}`}\r\n                  >\r\n                    {val.title}\r\n                  </span>\r\n\r\n                  <span>\r\n                    <FontAwesomeIcon\r\n                      icon={faTrash}\r\n                      onClick={() => deleteTodo(ind)}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Todo;\r\n","import React from 'react'\r\nimport Todo from './components/Todo'\r\nimport './index.css'\r\n\r\nfunction App(){\r\n  return(\r\n    <div>\r\n      <Todo />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root')\r\n);\r\n\r\n// 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"],"sourceRoot":""}